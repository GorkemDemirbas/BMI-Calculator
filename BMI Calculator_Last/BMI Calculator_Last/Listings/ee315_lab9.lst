


ARM Macro Assembler    Page 1 


    1 00000000         ;EE315_Lab9.s
    2 00000000         ; these are the EQU directives. They are for using label
                       s instead of 
    3 00000000         ; actual hexadecimal memory locatons.
    4 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
    5 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
    6 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
    7 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
    8 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
    9 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   10 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   11 00000000 40025008 
                       PF1     EQU              0x40025008
   12 00000000 40025010 
                       PF2     EQU              0x40025010
   13 00000000 40025020 
                       PF3     EQU              0x40025020
   14 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   15 00000000 075BCD15 
                       Seed    EQU              123456789
   16 00000000         
   17 00000000         ; THUMB mean we are going to be using THUMB type ARM lan
                       guage. It is the language
   18 00000000         ; we learn in this course
   19 00000000                 THUMB
   20 00000000         ; AREA reserves a memory location for us. 
   21 00000000         ; "Processor please reserve a memory location for me. It
                        will be a data memory,
   22 00000000         ; i.e. I will put data in it (no code). 
   23 00000000         ; And make a data alignmen for 2^2=4 bytes.
   24 00000000         ; i.e. write my data starting from an adress location wh
                       ich is factor of 4. 
   25 00000000                 AREA             |.data|, DATA, READWRITE, ALIGN
=4
   26 00000000         ; Create a global variable M. anybody, including the sub
                       routines can reach it.
   27 00000000         ; Red, Green, Blue will point the starting address of th
                       is memory location. 
   28 00000000         ; and reserve 4 bytes for each.
   29 00000000                 EXPORT           Red [DATA,SIZE=4] ;
   30 00000000                 EXPORT           Green [DATA,SIZE=4] ; 
   31 00000000                 EXPORT           Blue [DATA,SIZE=4] ;
   32 00000000         ; then we clear these global variable (make them zeros)



ARM Macro Assembler    Page 2 


   33 00000000 00 00 00 
              00       Red     SPACE            4
   34 00000004 00 00 00 
              00       Green   SPACE            4
   35 00000008 00 00 00 
              00       Blue    SPACE            4
   36 0000000C         
   37 0000000C         ; reserve another AREA for me, in the CODE space (i.e. I
                       nstruction memory)
   38 0000000C         ; so what I will write after this point will be instruct
                       ions, not data
   39 0000000C         ; make it read only so that no body writes over it. 
   40 0000000C         ; make data alignment of 2^2=4. Start wrting my code fro
                       m a memory location, 
   41 0000000C         ; which is a factor of 4
   42 0000000C                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   43 00000000         ; make Start label, which is the beginning memory locati
                       on of my instructions.
   44 00000000         ; so that I may call it from another file, or subroutine
                       , (again make it global)
   45 00000000                 EXPORT           Start
   46 00000000         
   47 00000000         Start
   48 00000000         
   49 00000000 F000 F847       BL               PortF_LED_Init ; go jump to whe
                                                            re we prepare the l
                                                            eds for action     
                                                               
   50 00000004         
   51 00000004 F04F 09B9       MOV              R9,#185     ;BOY
   52 00000008 F44F 6AFA       MOV              R10,#2000   ;KILO
   53 0000000C F242 7B10       MOV              R11,#10000  ;Çarpma Katsayisi
   54 00000010 FB09 F909       MUL              R9,R9       ; BOY^2
   55 00000014 FB0A FA0B       MUL              R10,R11     ;
   56 00000018 FBBA FAF9       UDIV             R10,R9      ; R10=BMI
   57 0000001C F1BA 0F1E       CMP              R10,#30
   58 00000020 DA08            BGE              obez
   59 00000022 F1BA 0F19       CMP              R10,#25
   60 00000026 DA18            BGE              sisman
   61 00000028 F1BA 0F12       CMP              R10,#18
   62 0000002C DC1C            BGT              normal
   63 0000002E F1BA 0F12       CMP              R10,#18
   64 00000032 DD20            BLE              zayif
   65 00000034         
   66 00000034         
   67 00000034         obez
   68 00000034         ; turn the red on
   69 00000034 F000 F853       BL               SSR_R_On
   70 00000038 F000 F875       BL               Delay
   71 0000003C F000 F864       BL               SSR_Off
   72 00000040 F000 F85B       BL               SSR_G_On
   73 00000044 F000 F86F       BL               Delay
   74 00000048 F000 F85E       BL               SSR_Off
   75 0000004C F000 F84E       BL               SSR_B_On
   76 00000050 F000 F869       BL               Delay
   77 00000054 F000 F858       BL               SSR_Off
   78 00000058 E7EC            B                obez
   79 0000005A         



ARM Macro Assembler    Page 3 


   80 0000005A         sisman
   81 0000005A         
   82 0000005A F000 F840       BL               SSR_R_On
   83 0000005E F000 F862       BL               Delay
   84 00000062 F000 F851       BL               SSR_Off
   85 00000066 E7F8            B                sisman
   86 00000068         
   87 00000068         normal
   88 00000068         
   89 00000068 F000 F847       BL               SSR_G_On
   90 0000006C F000 F85B       BL               Delay
   91 00000070 F000 F84A       BL               SSR_Off
   92 00000074 E7F8            B                normal
   93 00000076         
   94 00000076         zayif
   95 00000076         
   96 00000076 F000 F832       BL               SSR_R_On
   97 0000007A F000 F854       BL               Delay
   98 0000007E F000 F843       BL               SSR_Off
   99 00000082 F000 F83A       BL               SSR_G_On
  100 00000086 F000 F84E       BL               Delay
  101 0000008A F000 F83D       BL               SSR_Off
  102 0000008E E7F2            B                zayif
  103 00000090         
  104 00000090         
  105 00000090         
  106 00000090         TheEnd
  107 00000090 E7FE            B                TheEnd
  108 00000092         ; this is the subroutine for initializing the leds and s
                       wtiches. It is called once in the beginning of the main 
                       function  "Start"
  109 00000092         PortF_LED_Init
  110 00000092 492B            LDR              R1, =SYSCTL_RCGCGPIO_R ; SYSCTL
                                                            _RCGCGPIO_R is for 
                                                            activating the cloc
                                                            k for Port F. 
  111 00000094         ; We do this activation here not for only the LED, but a
                       lso for the switches
  112 00000094 6808            LDR              R0, [R1]    ; get the register 
                                                            vaue to r0.
  113 00000096 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 (6th 
                                                            bit from left) to t
                                                            urn on clock of por
                                                            t F (all bits of F)
                                                            . (datasheet page 3
                                                            40 )
  114 0000009A 6008            STR              R0, [R1]    ; write it on the c
                                                            ontrol register.
  115 0000009C BF00            NOP
  116 0000009E BF00            NOP
  117 000000A0 BF00            NOP                          ; enabling the cloc
                                                            k need 2 cyles to w
                                                            ait. so wait.
  118 000000A2         
  119 000000A2 4928            LDR              R1, =GPIO_PORTF_AMSEL_R ; we di
                                                            sable the analog fu
                                                            nctionality using t
                                                            he control register
                                                             Analog Mode SELece



ARM Macro Assembler    Page 4 


                                                            tion Register.
  120 000000A4         ; because LED is a digital device!
  121 000000A4 6808            LDR              R0, [R1]    ; get the register 
                                                            value to r0
  122 000000A6 F020 000E       BIC              R0, #0x0E   ; clear bits 1-2-3 
                                                            1110, which are the
                                                             RGB leds.
  123 000000AA 6008            STR              R0, [R1]    ; write the value r
                                                            egister. 
  124 000000AC         
  125 000000AC         ; this is the port control register. we have to change i
                       t to make a port F a GPIO (general purpose intput output
                       ) (datasheet p.688)
  126 000000AC 4926            LDR              R1, =GPIO_PORTF_PCTL_R ; r1 poi
                                                            nts to register add
                                                            ress
  127 000000AE 6808            LDR              R0, [R1]    ; the value isat r0
                                                            
  128 000000B0 F020 00F0       BIC              R0, #0x000000F0 ; clear the 2nd
                                                            , 3rd and 4th nibbl
                                                            es from left (bits 
                                                            4-7, 8-11, 12-15). 
                                                            
  129 000000B4 F420 6070       BIC              R0, #0x00000F00 ; These nibbles
                                                             control function o
                                                            f portF bits "1-2-3
                                                            ", the RGB Leds (da
                                                            tasheet page 689)
  130 000000B8 F420 4070       BIC              R0, #0x0000F000 ;
  131 000000BC 6008            STR              R0, [R1]    ; write it on the r
                                                            egister.
  132 000000BE         
  133 000000BE         
  134 000000BE 4923            LDR              R1, =GPIO_PORTF_DIR_R ; r1 poin
                                                            ts to port F direct
                                                            ion register. 
  135 000000C0 6808            LDR              R0, [R1]    ; r0 has the regist
                                                            er value.
  136 000000C2 F040 000E       ORR              R0,#0x0E    ; port F bits 1-2-3
                                                            , RGB LEDs are outp
                                                            ut,  because they a
                                                            re high -  1 now.
  137 000000C6 6008            STR              R0, [R1]    ; write the value t
                                                            o the register.
  138 000000C8         
  139 000000C8 4921            LDR              R1, =GPIO_PORTF_AFSEL_R ; r1 po
                                                            ints to the the alt
                                                            ernative functions 
                                                            register
  140 000000CA 6808            LDR              R0, [R1]    ; r0 has the value 
                                                            of the register
  141 000000CC F020 000E       BIC              R0, #0x0E   ; clear bits 1-2-3.
                                                             its AF is disabled
                                                             now.
  142 000000D0 6008            STR              R0, [R1]    ; copy the value to
                                                             the register.
  143 000000D2         
  144 000000D2         ; enabling the data register. 
  145 000000D2 4920            LDR              R1, =GPIO_PORTF_DEN_R ; r1 poin



ARM Macro Assembler    Page 5 


                                                            ts the the control 
                                                            register
  146 000000D4 6808            LDR              R0, [R1]    ; ro has the regist
                                                            er value
  147 000000D6 F040 000E       ORR              R0,#0x0E    ; make the bits 1-2
                                                            -3 high/1. So the R
                                                            GB Leds are zero in
                                                            itiallf (off)
  148 000000DA 6008            STR              R0, [R1]    ; I write the value
                                                             to the registr.
  149 000000DC         ; we are finished with the init. get out of this subrout
                       ine.
  150 000000DC 4770            BX               LR
  151 000000DE         
  152 000000DE         ; this subroutines make the led flash red 
  153 000000DE         SSR_R_On
  154 000000DE B403            PUSH{r0-r1}
  155 000000E0 491D            LDR              R1, =PF1    ; PF1 is a label.  
                                                            we reach the red le
                                                            d on it bit 1.
  156 000000E2 F04F 0002       MOV              R0, #0x02   ; write 00000010 to
                                                             R0. so that bit 1 
                                                            (2nd bit from left 
                                                            is 1)
  157 000000E6 6008            STR              R0, [R1]    ; copy r0 to PF1. s
                                                            o red led will be o
                                                            n.
  158 000000E8 BC03            POP{r0-r1}
  159 000000EA 4770            BX               LR          ; we are done
  160 000000EC         
  161 000000EC         SSR_B_On
  162 000000EC B403            PUSH{r0-r1}
  163 000000EE 491B            LDR              R1, =PF2    ; PF2 is a label.  
                                                            we reach the blue l
                                                            ed on it bit 2.
  164 000000F0 F04F 0004       MOV              R0, #0x04   ; write 00000100 to
                                                             R0. so that bit 2 
                                                            (3rd bit from left 
                                                            is 1)
  165 000000F4 6008            STR              R0, [R1]    ; copy r0 to PF2. s
                                                            o blue led will be 
                                                            on.
  166 000000F6 BC03            POP{r0-r1}
  167 000000F8 4770            BX               LR          ; we are done 
  168 000000FA         
  169 000000FA         
  170 000000FA         SSR_G_On
  171 000000FA B403            PUSH{r0-r1}
  172 000000FC 4918            LDR              R1, =PF3    ; PF3 is a label.  
                                                            we reach the green 
                                                            led on it bit 1.
  173 000000FE F04F 0008       MOV              R0, #0x08   ; write 00001000 to
                                                             R0. so that bit 1 
                                                            (4th bit from left 
                                                            is 1)
  174 00000102 6008            STR              R0, [R1]    ; copy r0 to PF3. s
                                                            o red led will be o
                                                            n.
  175 00000104 BC03            POP{r0-r1}



ARM Macro Assembler    Page 6 


  176 00000106 4770            BX               LR          ; we are done 
  177 00000108         
  178 00000108         ; this subroutine turns all leds  (PF1-2-3) off
  179 00000108         SSR_Off
  180 00000108 B403            PUSH{r0-r1}
  181 0000010A 4913            LDR              R1, =PF1    ; PF2 is a label.  
                                                            we reach the blue l
                                                            ed on it bit 2.
  182 0000010C F04F 0000       MOV              R0, #0x00   ; write 00000000 to
                                                             R0. so that bit 2 
                                                            (3rd bit from left 
                                                            is 1)
  183 00000110 6008            STR              R0, [R1]    ; copy r0 to PF2. s
                                                            o blue led will be 
                                                            off
  184 00000112 4912            LDR              R1, =PF2    ; PF2 is a label.  
                                                            we reach the blue l
                                                            ed on it bit 2.
  185 00000114 F04F 0000       MOV              R0, #0x00   ; write 00000000 to
                                                             R0. so that bit 2 
                                                            (3rd bit from left 
                                                            is 1)
  186 00000118 6008            STR              R0, [R1]    ; copy r0 to PF2. s
                                                            o blue led will be 
                                                            off
  187 0000011A 4911            LDR              R1, =PF3    ; PF2 is a label.  
                                                            we reach the blue l
                                                            ed on it bit 2.
  188 0000011C F04F 0000       MOV              R0, #0x00   ; write 00000000 to
                                                             R0. so that bit 2 
                                                            (3rd bit from left 
                                                            is 1)
  189 00000120 6008            STR              R0, [R1]    ; copy r0 to PF2. s
                                                            o blue led will be 
                                                            off
  190 00000122 BC03            POP{r0-r1}
  191 00000124 4770            BX               LR          ; we are done
  192 00000126         
  193 00000126         
  194 00000126         
  195 00000126         Delay
  196 00000126 F644 6020       MOV              R0,#0x4E20
  197 0000012A         waitS
  198 0000012A F04F 0402       MOV              R4,#2
  199 0000012E         innerloop
  200 0000012E 3C01            SUBS             R4,#1
  201 00000130 D000            BEQ              outerloop
  202 00000132 E7FC            B                innerloop
  203 00000134         outerloop
  204 00000134 1E40            SUBS             R0,R0,#1    ; subtract 1 from r
                                                            0.
  205 00000136 2800            CMP              R0,#00      ; after 2 million t
                                                            imes, it will be ze
                                                            ro
  206 00000138 D401            BMI              DelayEnd
  207 0000013A D1F6            BNE              waitS       ; not zero yet. kee
                                                            p looping.  
  208 0000013C BC01            POP              {R0}        ; zero. we are done
                                                             yet. pop the value



ARM Macro Assembler    Page 7 


                                                             you've saved to R0
                                                            .
  209 0000013E         DelayEnd
  210 0000013E 4770            BX               LR          ; go back.
  211 00000140         
  212 00000140                 ALIGN                        ; I wont write any 
                                                            ore code or data. b
                                                            ut if I decide to w
                                                            rite, you better st
                                                            ay aligned.
  213 00000140                 END                          ; we are really don
                                                            e this time. 
              400FE608 
              40025528 
              4002552C 
              40025400 
              40025420 
              4002551C 
              40025008 
              40025010 
              40025020 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --depend=.
\objects\ee315_lab9.d -o.\objects\ee315_lab9.o -I.\RTE\_Target_1 -ID:\Arm\Packs
\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Keil_v5\ARM\CMSIS\Include --pr
edefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="T
M4C123GH6PM SETA 1" --list=.\listings\ee315_lab9.lst EE315_Lab9.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.data 00000000

Symbol: .data
   Definitions
      At line 25 in file EE315_Lab9.s
   Uses
      None
Comment: .data unused
Blue 00000008

Symbol: Blue
   Definitions
      At line 35 in file EE315_Lab9.s
   Uses
      At line 31 in file EE315_Lab9.s
Comment: Blue used once
Green 00000004

Symbol: Green
   Definitions
      At line 34 in file EE315_Lab9.s
   Uses
      At line 30 in file EE315_Lab9.s
Comment: Green used once
Red 00000000

Symbol: Red
   Definitions
      At line 33 in file EE315_Lab9.s
   Uses
      At line 29 in file EE315_Lab9.s
Comment: Red used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 42 in file EE315_Lab9.s
   Uses
      None
Comment: .text unused
Delay 00000126

Symbol: Delay
   Definitions
      At line 195 in file EE315_Lab9.s
   Uses
      At line 70 in file EE315_Lab9.s
      At line 73 in file EE315_Lab9.s
      At line 76 in file EE315_Lab9.s
      At line 83 in file EE315_Lab9.s
      At line 90 in file EE315_Lab9.s
      At line 97 in file EE315_Lab9.s
      At line 100 in file EE315_Lab9.s

DelayEnd 0000013E

Symbol: DelayEnd
   Definitions
      At line 209 in file EE315_Lab9.s
   Uses
      At line 206 in file EE315_Lab9.s
Comment: DelayEnd used once
PortF_LED_Init 00000092

Symbol: PortF_LED_Init
   Definitions
      At line 109 in file EE315_Lab9.s
   Uses
      At line 49 in file EE315_Lab9.s
Comment: PortF_LED_Init used once
SSR_B_On 000000EC

Symbol: SSR_B_On
   Definitions
      At line 161 in file EE315_Lab9.s
   Uses
      At line 75 in file EE315_Lab9.s
Comment: SSR_B_On used once
SSR_G_On 000000FA

Symbol: SSR_G_On
   Definitions
      At line 170 in file EE315_Lab9.s
   Uses
      At line 72 in file EE315_Lab9.s
      At line 89 in file EE315_Lab9.s
      At line 99 in file EE315_Lab9.s

SSR_Off 00000108

Symbol: SSR_Off



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 179 in file EE315_Lab9.s
   Uses
      At line 71 in file EE315_Lab9.s
      At line 74 in file EE315_Lab9.s
      At line 77 in file EE315_Lab9.s
      At line 84 in file EE315_Lab9.s
      At line 91 in file EE315_Lab9.s
      At line 98 in file EE315_Lab9.s
      At line 101 in file EE315_Lab9.s

SSR_R_On 000000DE

Symbol: SSR_R_On
   Definitions
      At line 153 in file EE315_Lab9.s
   Uses
      At line 69 in file EE315_Lab9.s
      At line 82 in file EE315_Lab9.s
      At line 96 in file EE315_Lab9.s

Start 00000000

Symbol: Start
   Definitions
      At line 47 in file EE315_Lab9.s
   Uses
      At line 45 in file EE315_Lab9.s
Comment: Start used once
TheEnd 00000090

Symbol: TheEnd
   Definitions
      At line 106 in file EE315_Lab9.s
   Uses
      At line 107 in file EE315_Lab9.s
Comment: TheEnd used once
innerloop 0000012E

Symbol: innerloop
   Definitions
      At line 199 in file EE315_Lab9.s
   Uses
      At line 202 in file EE315_Lab9.s
Comment: innerloop used once
normal 00000068

Symbol: normal
   Definitions
      At line 87 in file EE315_Lab9.s
   Uses
      At line 62 in file EE315_Lab9.s
      At line 92 in file EE315_Lab9.s

obez 00000034

Symbol: obez
   Definitions
      At line 67 in file EE315_Lab9.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 58 in file EE315_Lab9.s
      At line 78 in file EE315_Lab9.s

outerloop 00000134

Symbol: outerloop
   Definitions
      At line 203 in file EE315_Lab9.s
   Uses
      At line 201 in file EE315_Lab9.s
Comment: outerloop used once
sisman 0000005A

Symbol: sisman
   Definitions
      At line 80 in file EE315_Lab9.s
   Uses
      At line 60 in file EE315_Lab9.s
      At line 85 in file EE315_Lab9.s

waitS 0000012A

Symbol: waitS
   Definitions
      At line 197 in file EE315_Lab9.s
   Uses
      At line 207 in file EE315_Lab9.s
Comment: waitS used once
zayif 00000076

Symbol: zayif
   Definitions
      At line 94 in file EE315_Lab9.s
   Uses
      At line 64 in file EE315_Lab9.s
      At line 102 in file EE315_Lab9.s

17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 6 in file EE315_Lab9.s
   Uses
      At line 139 in file EE315_Lab9.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 9 in file EE315_Lab9.s
   Uses
      At line 119 in file EE315_Lab9.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 4 in file EE315_Lab9.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 8 in file EE315_Lab9.s
   Uses
      At line 145 in file EE315_Lab9.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 5 in file EE315_Lab9.s
   Uses
      At line 134 in file EE315_Lab9.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 10 in file EE315_Lab9.s
   Uses
      At line 126 in file EE315_Lab9.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 7 in file EE315_Lab9.s
   Uses
      None
Comment: GPIO_PORTF_PUR_R unused
PF1 40025008

Symbol: PF1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 11 in file EE315_Lab9.s
   Uses
      At line 155 in file EE315_Lab9.s
      At line 181 in file EE315_Lab9.s

PF2 40025010

Symbol: PF2
   Definitions
      At line 12 in file EE315_Lab9.s
   Uses
      At line 163 in file EE315_Lab9.s
      At line 184 in file EE315_Lab9.s

PF3 40025020

Symbol: PF3
   Definitions
      At line 13 in file EE315_Lab9.s
   Uses
      At line 172 in file EE315_Lab9.s
      At line 187 in file EE315_Lab9.s

SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 14 in file EE315_Lab9.s
   Uses
      At line 110 in file EE315_Lab9.s
Comment: SYSCTL_RCGCGPIO_R used once
Seed 075BCD15

Symbol: Seed
   Definitions
      At line 15 in file EE315_Lab9.s
   Uses
      None
Comment: Seed unused
12 symbols
369 symbols in table
